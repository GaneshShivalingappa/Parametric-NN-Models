Bootstrap: docker
From: nvidia/cuda:12.2.2-cudnn8-devel-ubuntu22.04

# %setup

%files
    app/ /data

# %app*

%post
    # Install base utilities
    apt-get update
    apt-get install -y \
    nano \
    wget

    # Install miniconda3
    # From https://docs.conda.io/projects/miniconda/en/latest/
    export CONDA_DIR=/miniconda3
    export SHA256SUM=d0643508fa49105552c94a523529f4474f91730d3e0d1f168f1700c43ae67595
    
    mkdir -p ${CONDA_DIR}
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ${CONDA_DIR}/miniconda.sh -q
    echo "${SHA256SUM} ${CONDA_DIR}/miniconda.sh" > shasum
    sha256sum --check --status shasum
    bash ${CONDA_DIR}/miniconda.sh -b -u -p ${CONDA_DIR}
    rm -rf ${CONDA_DIR}/miniconda.sh shasum

    # From https://github.com/ContinuumIO/docker-images/blob/main/miniconda3/debian/Dockerfile
    ln -s ${CONDA_DIR}/etc/profile.d/conda.sh /etc/profile.d/conda.sh
    echo ". ${CONDA_DIR}/etc/profile.d/conda.sh" >> ~/.bashrc
    echo "conda activate base" >> ~/.bashrc && \
    find ${CONDA_DIR} -follow -type f -name '*.a' -delete && \
    find ${CONDA_DIR} -follow -type f -name '*.js.map' -delete && \
    ${CONDA_DIR}/bin/conda clean -afy

    # Create conda environment with Python requirements
    ${CONDA_DIR}/bin/conda update -n base conda
    ${CONDA_DIR}/bin/conda install -n base conda-libmamba-solver
    ${CONDA_DIR}/bin/conda config --set solver libmamba
    ${CONDA_DIR}/bin/conda env create -f /data/conda_venv.yml

    # Install gmsh (dependencies required by gmsh Python package)
    apt-get install -y gmsh

    # Clean up
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* 

# %test

%environment
    export CONDA_DIR=/miniconda3

# %startscript 

%runscript
    #!/bin/bash
    exec ${CONDA_DIR}/envs/$(head -n 1 /data/conda_venv.yml | cut -f 2 -d ' ')/bin/"$@"

%labels
    Author ganesh.shivalingappa@tu-braunschweig.de
    Version v0.0.1

# %help

##############################
# error_comparision
##############################
%apprun error_comparision
    #!/bin/bash
    exec ${CONDA_DIR}/envs/$(head -n 1 /data/conda_venv.yml | cut -f 2 -d ' ')/bin/python3 /data/train_time_CUDA_100.py

%apphelp error_comparision
    This is the help for foo.
##############################

##############################
# Parametric_FEM-NN
##############################
%apprun Parametric_FEM_NN
    #!/bin/bash
    exec ${CONDA_DIR}/envs/$(head -n 1 /data/conda_venv.yml | cut -f 2 -d ' ')/bin/python3 /data/Parametric_FEM_NN.py

%apphelp Parametric_FEM-NN
    This is the help for Parametric_FEM_NN.
##############################

##############################
# Parametric_FEM_Data
##############################
%apprun Parametric_FEM_Data
    #!/bin/bash
    exec ${CONDA_DIR}/envs/$(head -n 1 /data/conda_venv.yml | cut -f 2 -d ' ')/bin/python3 /data/Parametric_FEM_Data.py

%apphelp Parametric_FEM_Data
    This is the help for Parametric_FEM_Data.
##############################

##############################
# Parametric_PINN
##############################
%apprun Parametric_PINN
    #!/bin/bash
    exec ${CONDA_DIR}/envs/$(head -n 1 /data/conda_venv.yml | cut -f 2 -d ' ')/bin/python3 /data/Parametric_PINN.py

%apphelp Parametric_PINN
    This is the help for Parametric_PINN.
##############################

##############################
# training_time_node
##############################
%apprun training_time_node
    #!/bin/bash
    exec ${CONDA_DIR}/envs/$(head -n 1 /data/conda_venv.yml | cut -f 2 -d ' ')/bin/python3 /data/training_time_number_of_nodes.py

%apphelp training_time_node
    This is the help for training_time_node.
##############################

##############################
# training_time_sample
##############################
%apprun training_time_sample
    #!/bin/bash
    exec ${CONDA_DIR}/envs/$(head -n 1 /data/conda_venv.yml | cut -f 2 -d ' ')/bin/python3 /data/training_time_number_of_sample.py

%apphelp training_time_sample
    This is the help for training_time_sample.
##############################

